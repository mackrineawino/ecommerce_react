version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: mackie86/ecommercereact
    docker:
      - image: node

jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - run:
          name: Install Docker
          command: |
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo service docker start
            docker --version
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker Image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker Image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker
          command: docker load -i /tmp/workspace/image.tar
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG

  publish-tag:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Load archived Docker
          command: docker load -i /tmp/workspace/image.tar
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG

workflows:
  version: 2
  build-main:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: master
  build-tags:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-tag:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
